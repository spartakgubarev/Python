# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.
# Пример:
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
# import random


# def create_list(amount):
#     lst = []
#     for i in range(amount):
#         rnd = random.randint(1, 20)
#         lst.append(rnd)
#     return lst

# list1 = create_list(int(input('Введите длину списка: ')))
# lst2 = []
# sum = 0

# for i in range(1, len(list1), 2):   # начало итерации с 1, шагаем по 2, по нечетным позициям
#     lst2.append(list1[i])
#     sum += list1[i]

# print(f'{list1} --> на нечетных позициях {lst2}, ответ: {sum}')


# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# Пример:
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]
# def even_odd(num):  # определяем четный или нечетный список для подсчета среднего элемента списка
#     if len(lst) % 2 != 0:
#         return len(lst) // 2 + 1
#     else:
#         return len(lst) // 2

# lst = [2, 3, 4, 5, 6]
# lst1 = []

# lst_len = even_odd(len(lst))

# for i in range(lst_len):
#     lst1.append(lst[i] * lst[-1-i])
# print(f'{lst} --> {lst1}')


# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19
# lst = [1.1, 1.2, 3.1, 5, 10.01]
# _lst = []

# for i in lst:
#     if not str(i).isdigit():    # отсеиваем не вещественные числа, в данном примере это - число 5 в списке
#         _lst.append(i)

# lst_max = _lst[0] % 1   # задаем начальные макс и мин значения. Отбрасываем целове число
# lst_min = _lst[0] % 1

# for i in range(1, len(_lst)):   # поиск мах и мin. Можно на втроенную функцию конечно заменить
#     if _lst[i] % 1 > lst_max:
#         lst_max = _lst[i] % 1
#     if _lst[i] % 1 < lst_min:
#         lst_min = _lst[i] % 1

# print(f'{lst} -> {round(lst_max - lst_min, 5)}')


# Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10
lst = []
val = int(input('Введите целое десятичное число: '))
val1 = val
while val > 0:
    lst.append(val % 2)
    val //= 2
print(f'{val1} -> {lst[::-1]}')

# попробовал через рекурсию
def aaa(b):
    if b <= 0:
        return b
    ls.append(b % 2)
    aaa(b // 2)
ls = []
a = 666
aaa(a)
print(a,  ls[::-1])


# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Пример:
# - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
